class Solution:
    def countGoodArrays(self, n: int, m: int, k: int) -> int:
        MOD = 10**9 + 7

        if n == 1:
            return m if k == 0 else 0
        if m == 0 or k > n - 1:
            return 0

        def pow_mod(a, b, mod):
            result = 1
            a %= mod
            while b > 0:
                if b & 1:
                    result = result * a % mod
                a = a * a % mod
                b >>= 1
            return result

        def inverse(x):
            return pow_mod(x, MOD - 2, MOD)

        N = n - 1
        fact = [1] * (N + 1)
        for i in range(1, N + 1):
            fact[i] = fact[i - 1] * i % MOD

        inv_fact_k = inverse(fact[k]) if 0 <= k <= N else 1
        inv_fact_nk = inverse(fact[N - k]) if 0 <= (N - k) <= N else 1

        C = fact[N] * inv_fact_k % MOD * inv_fact_nk % MOD
        pow_m1 = pow_mod(m - 1, N - k, MOD)

        answer = C * m % MOD * pow_m1 % MOD
        return answer
